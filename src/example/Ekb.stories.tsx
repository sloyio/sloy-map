import { StoryObj } from "@storybook/react";
import { ComponentProps, useCallback } from "react";
import { Provider } from "react-redux";
import { Button, ButtonSize, ButtonType, defaultTheme } from "sloy-ui";
import { configureStore } from "@reduxjs/toolkit";
import {
  ILayer,
  OverrideLayersFn,
  SloyMap,
  internalTranslations,
  sloyReducer,
} from "@/index";
import {
  copyrights,
  defaultLayers,
  defaultMapState,
  defaultSources,
} from "./ekbConfig";
import ekbLoader from "./ekb-loader.svg";
import "sloy-ui/fonts.css";
import styled from "styled-components";

export default {
  title: "Map/Advanced/Ekb",
  component: SloyMap,
  parameters: {
    layout: "fullscreen",
  },
};

const store = configureStore({
  reducer: {
    sloy: sloyReducer,
  },
});

const Example = (args: Partial<ComponentProps<typeof SloyMap>>) => {
  const overrideLayers: OverrideLayersFn = useCallback((layer: ILayer) => {
    switch (layer.id) {
      case "ekb-quarter":
        return <QuarterFilter />;
      case "ekb-facades":
        return <FacadeFilter />;
      default:
        return null;
    }
  }, []);

  return (
    <Provider store={store}>
      <SloyMap
        locale="ru-RU"
        theme={defaultTheme}
        translations={internalTranslations}
        mapState={defaultMapState}
        sources={defaultSources}
        layers={defaultLayers}
        overrideLayers={overrideLayers}
        copyrights={copyrights}
        {...args}
        layout={{ loaderImageSrc: ekbLoader, ...args.layout }}
        renderFooter={({ t }) => (
          <>
            <Button
              type={ButtonType.DEFAULT}
              size={ButtonSize.MEDIUM}
              href="https://github.com/gcor/sloy-map"
              rounded
            >
              Github
            </Button>
            <Button
              type={ButtonType.DEFAULT}
              size={ButtonSize.MEDIUM}
              href="https://github.com/gcor/sloy-map"
              rounded
            >
              {t("About")}
            </Button>
          </>
        )}
      />
    </Provider>
  );
};

// internal stories code, do not copy:
type Story = StoryObj<typeof SloyMap>;
export const Default: Story = Example.bind({});
// Default.args = { mapProps: { reuseMaps: false } };

const FacadeWrapper = styled.div`
  font-size: 14px;
  line-height: 21px;

  p {
    margin: 8px;
    &:first-child {
      margin-top: 0;
    }
  }
`;

function FacadeFilter() {
  return (
    <FacadeWrapper>
      <p>
        –î–ª—è –∑–¥–∞–Ω–∏–π –≤&nbsp;–ø–µ—Ä–≤–æ–º –ø–æ—è—Å–µ —Ç—É—Ä–∏—Å—Ç–∏—á–µ—Å–∫–æ–≥–æ —Ü–µ–Ω—Ç—Ä–∞ –ï–∫–∞—Ç–µ—Ä–∏–Ω–±—É—Ä–≥–∞
        —Ä–∞–∑—Ä–∞–±–æ—Ç–∞–Ω —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–π –¥–∏–∑–∞–π–Ω-–∫–æ–¥ —Ñ–∞—Å–∞–¥–æ–≤. –≠—Ç–æ –Ω—É–∂–Ω–æ –¥–ª—è —Ç–æ–≥–æ, —á—Ç–æ–±—ã
        –∏—Å—Ç–æ—Ä–∏—á–µ—Å–∫–∞—è —á–∞—Å—Ç—å –≥–æ—Ä–æ–¥–∞ –∏–º–µ–ª–∞ –æ–ø—Ä—è—Ç–Ω–æ–µ –∏&nbsp;–µ–¥–∏–Ω–æ–µ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ.
        –í&nbsp;—ç—Ç–æ–º —Å–ª–æ–µ –ø–æ–∫–∞–∑–∞–Ω—ã –¥–æ–º–∞, –∫–æ—Ç–æ—Ä—ã–µ –≤—Ö–æ–¥—è—Ç –≤&nbsp;–ø–µ—Ä–≤—ã–π –ø–æ—è—Å. –ß—Ç–æ–±—ã
        –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Ä–µ–≥–ª–∞–º–µ–Ω—Ç –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è —Ñ–∞—Å–∞–¥–∞, –∫–ª–∏–∫–Ω–∏—Ç–µ –Ω–∞&nbsp;–¥–æ–º,
        –∞&nbsp;–∑–∞—Ç–µ–º –Ω–∞&nbsp;–∑–µ–ª—ë–Ω—É—é –∫–Ω–æ–ø–∫—É —Å–∫–∞—á–∏–≤–∞–Ω–∏—è.
      </p>
    </FacadeWrapper>
  );
}

const QuarterWRapper = styled.div`
  font-size: 14px;
  line-height: 21px;

  p {
    margin: 8px;
    &:first-child {
      margin-top: 0;
    }
  }

  ul {
    list-style-type: "‚Äî ";
    margin: 0;
    padding: 0;
    padding-left: 16px;
  }

  li {
    padding: 0;
  }
`;

function QuarterFilter() {
  return (
    <QuarterWRapper>
      <p>
        –ö–≤–∞—Ä—Ç–∞–ª—å–Ω—ã–π üôã ‚Äî —ç—Ç–æ —á–µ–ª–æ–≤–µ–∫, –∫–æ—Ç–æ—Ä—ã–π —Å–ª–µ–¥–∏—Ç –∑–∞&nbsp;–ø–æ—Ä—è–¥–∫–æ–º –Ω–∞
        –ø—Ä–∏–¥–æ–º–æ–≤—ã—Ö —Ç–µ—Ä—Ä–∏—Ç–æ—Ä–∏—è—Ö, –¥–µ—Ç—Å–∫–∏—Ö –ø–ª–æ—â–∞–¥–∫–∞—Ö, –ø–∞—Ä–∫–æ–≤–∫–∞—Ö, –º—É—Å–æ—Ä–∫–∞—Ö, –æ–±—ä–µ–∫—Ç–∞—Ö
        —Ç–æ—Ä–≥–æ–≤–ª–∏ –∏&nbsp;—Ç. –¥.
      </p>
      <p>–ù–∞ —á—Ç–æ –º–æ–∂–Ω–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å—Å—è –∫–≤–∞—Ä—Ç–∞–ª—å–Ω–æ–º—É:</p>
      <ul>
        <li>–æ–±—â–∏–µ –≤–æ–ø—Ä–æ—Å—ã –±–ª–∞–≥–æ—É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞;</li>
        <li>–Ω–µ–∑–∞–∫–æ–Ω–Ω–∞—è —Ç–æ—Ä–≥–æ–≤–ª—è, –ø–∞—Ä–∫–æ–≤–∫–∏ –∏ –ø–æ—Å—Ç—Ä–æ–π–∫–∏;</li>
        <li>–≤—ã–≤–µ—Å–∫–∏ –∏ –Ω–µ–∑–∞–∫–æ–Ω–Ω–∞—è —Ä–µ–∫–ª–∞–º–∞;</li>
        <li>—Å–∞–º–æ–≤–æ–ª—å–Ω—ã–µ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è;</li>
        <li>—Å–ª–æ–º–∞–Ω–Ω—ã–µ –¥–µ—Ç—Å–∫–∏–µ –ø–ª–æ—â–∞–¥–∫–∏.</li>
      </ul>
    </QuarterWRapper>
  );
}